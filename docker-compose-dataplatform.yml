services:
  # Neo4j 图数据库
  neo4j:
    image: neo4j:5.14-community
    container_name: erag-neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/password123
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - erag-dataplatform
    restart: unless-stopped

  # Redis 缓存
  redis:
    image: redis:7.2-alpine
    container_name: erag-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - erag-dataplatform
    restart: unless-stopped

  # MinIO 对象存储
  minio:
    image: minio/minio:latest
    container_name: erag-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - erag-dataplatform
    restart: unless-stopped

  # MySQL 数据库 (支持CDC)
  mysql:
    image: mysql:8.0
    container_name: erag-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: erag
      MYSQL_USER: erag
      MYSQL_PASSWORD: erag123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init_mysql_cdc.sql:/docker-entrypoint-initdb.d/init.sql
    command: >
      --server-id=1
      --log-bin=mysql-bin
      --binlog-format=ROW
      --binlog-row-image=FULL
      --gtid-mode=ON
      --enforce-gtid-consistency=ON
      --log-slave-updates=ON
      --master-info-repository=TABLE
      --relay-log-info-repository=TABLE
      --transaction-write-set-extraction=XXHASH64
      --user=mysql
      --datadir=/var/lib/mysql
      --socket=/var/lib/mysql/mysql.sock
      --pid-file=/var/lib/mysql/mysql.pid
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    networks:
      - erag-dataplatform
    restart: unless-stopped

  # StarRocks FE (Frontend)
  starrocks-fe:
    image: starrocks/fe-ubuntu:3.1-latest
    container_name: erag-starrocks-fe
    ports:
      - "8030:8030"
      - "9020:9020"
      - "9030:9030"
    environment:
      - FE_SERVERS=fe1:starrocks-fe:9010
    volumes:
      - starrocks_fe_data:/opt/starrocks/fe/meta
      - starrocks_fe_log:/opt/starrocks/fe/log
    networks:
      - erag-dataplatform
    restart: unless-stopped

  # StarRocks BE (Backend)
  starrocks-be:
    image: starrocks/be-ubuntu:3.1-latest
    container_name: erag-starrocks-be
    ports:
      - "8040:8040"
      - "9060:9060"
      - "8060:8060"
    environment:
      - FE_SERVERS=starrocks-fe:9010
      - BE_ADDR=starrocks-be:9050
    volumes:
      - starrocks_be_data:/opt/starrocks/be/storage
      - starrocks_be_log:/opt/starrocks/be/log
    depends_on:
      - starrocks-fe
    networks:
      - erag-dataplatform
    restart: unless-stopped

  # Flink JobManager
  flink-jobmanager:
    image: flink:1.18-scala_2.12
    container_name: erag-flink-jobmanager
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - FLINK_PROPERTIES=jobmanager.rpc.address:flink-jobmanager
    volumes:
      - flink_data:/opt/flink/data
    networks:
      - erag-dataplatform
    restart: unless-stopped

  # Flink TaskManager
  flink-taskmanager:
    image: flink:1.18-scala_2.12
    container_name: erag-flink-taskmanager
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      - FLINK_PROPERTIES=jobmanager.rpc.address:flink-jobmanager|taskmanager.numberOfTaskSlots:2
    volumes:
      - flink_data:/opt/flink/data
    networks:
      - erag-dataplatform
    restart: unless-stopped

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  redis_data:
  minio_data:
  mysql_data:
  starrocks_fe_data:
  starrocks_fe_log:
  starrocks_be_data:
  starrocks_be_log:
  flink_data:

networks:
  erag-dataplatform:
    driver: bridge